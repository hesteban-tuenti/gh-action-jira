name: Triggered Workflow
on:
  workflow_dispatch:
    inputs:
      project:
        description: 'Project name'
        required: true
      basename:
        description: 'Directory basename to search for features'
        required: true
      feature:
        description: 'Feature file to run'
        required: false

jobs:
  get_matrix_features:
    runs-on: ubuntu-latest
    outputs:
        matrix: ${{ steps.set-matrix-features.outputs.matrix }}
    steps:
      - run: echo "My input is ${{ github.event.inputs.basename }}"
      
      - name: Checkout repo
        uses: actions/checkout@v4 

      - name: Retrieve all features and set matrix
        id: set-matrix-features
        shell: bash
        run: |
          if [ -z "${{ github.event.inputs.feature }}" ]; then
            echo "Feature file not provided, searching for all features in ${{ github.event.inputs.basename }}"
            feature="*.feature"
          else
            echo "Feature file provided: ${{ github.event.inputs.feature }}"
            feature="${{ github.event.inputs.feature }}"
          fi
          echo "Feature: $feature"
          echo "pwd: $(pwd)"
          echo "path: ${{ github.event.inputs.basename }}"

          files=$(find ${{ github.event.inputs.basename }} -type f -name "$feature")
          echo "Files found: $files"

          if [ -n "${{ github.event.inputs.feature }}" ];then
            file_array=($files)
            num_files=${#file_array[@]}
            if [ $num_files -gt 1 ]; then
              echo "Multiple files found, please provide a more specific basename"
              exit 1
            fi
          fi

          matrix="::set-output name=matrix::{\"include\":["
          for file in $files; do
            file=$(echo $file | sed 's|./acceptance/||')
            matrix="${matrix}{\"feature\":\"${file}\"},"
          done
          matrix="${matrix%?}]}" # remove trailing comma and close array
          echo $matrix
      
      - name: Print matrix
        run: echo ${{ steps.set-matrix-features.outputs.matrix }}

  run-action:
    needs: get_matrix_features
    runs-on: ubuntu-latest
    strategy:
        matrix: ${{fromJson(needs.get_matrix_features.outputs.matrix)}}
    steps:
        - name: Checkout repo
          uses: actions/checkout@v4
        
        - name: Get locales and environments
          id: get_locales_env
          shell: bash
          run: |
            if [ ${{ github.event.inputs.project }} == 'QABP' ]; then
              echo "locales=was:was_de-de" >> $GITHUB_OUTPUT
              echo "environments=was:was-live" >> $GITHUB_OUTPUT
            elif [ ${{ github.event.inputs.project }} == 'QANOV' ]; then
              echo "locales=blaude:blaude_de-de,vivobr:vivobr_pt-br,o2uk:o2uk_en-gb,moves:moves_es-es,o2de:o2de_de-de,o2es:o2es_es-es" >> $GITHUB_OUTPUT
              echo "environments=blaude:blaude-live,vivobr:vivobr-live,o2uk:o2uk-live,moves:moves-live,o2de:o2de-live,o2es:o2es-live" >> $GITHUB_OUTPUT
            fi

        - name: Run action for each file
          uses: './.github/actions/update-scenarios'
          with:
            project: ${{ github.event.inputs.project }}
            feature: ${{ matrix.feature }}
            locales: ${{ steps.get_locales_env.outputs.locales }}
            environments: ${{ steps.get_locales_env.outputs.environments }}